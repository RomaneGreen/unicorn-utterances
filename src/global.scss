@import 'vars';
@import './prism';

:root {
  /* Some obvious colors (dark/light) are duplicated to provide dark mode */
  --darkPrimary: #153E67;
  --primary: #127DB3;
  --black: black;
  --white: white;
  --darkGrey: rgba(0, 0, 0, 0.64);
  --highImpactBlack: rgba(0, 0, 0, 0.87);
  --midImpactBlack: rgba(0, 0, 0, 0.64);
  --lowImpactBlack: rgba(0, 0, 0, 0.58);
  --backgroundColor: #E4F4FF;
  --cardActiveBackground: #EBF6FC;
  --cardActiveBoxShadow: 0px 2px 4px rgba(11, 37, 104, 0.27), inset 0px 1px 0px #FFFFFF;
  --animSpeed: 200ms;
  --animStyle: ease-in-out;
  --cardOutlineStyle: 1px solid var(--primary);
  --archivo: 'Archivo', sans-serif;
  --oswald: 'Oswald', 'Archivo', sans-serif;
  --cardRadius: #{2 * $baseUnit}px;
  --filterBarIconSize: #{6 * $baseUnit}px;
  --filterBarFontSize: #{5 * $baseUnit}px;
  --listViewPadding: #{3 * $baseUnit}px;
  font-size: $rootFontSize;
}

@media screen and (min-width: 600px) {
  :root {
    --listViewPadding: #{$baseUnit * 5}px;
  }
}

:focus {
  outline-color: var(--darkPrimary);
}

//without this all <button>s have bad outline colors in firefox
:focus::-moz-focus-inner {
  padding: 0; //prevent weirdness just in case
  border-color: var(--darkPrimary);
}

.listViewContent {
  margin: 0 auto;
  max-width: #{67318 * $baseUnit}px;
  padding: 0 var(--listViewPadding)
}

.postViewContent {
  padding: #{$baseUnit * 5}px;
}

.postViewContent > * {
  margin: 0 auto;
}

body {
  background-color: var(--backgroundColor);
  font-family: var(--archivo);
  color: var(--black);
  transition: color var(--animStyle) var(--animSpeed), background-color var(--animStyle) var(--animSpeed);
  margin: 0;
}

h1, h2, h3 {
  font-family: var(--oswald);
}

/* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
}

.visually-hidden a:focus,
.visually-hidden input:focus,
.visually-hidden button:focus {
  position: static;
  width: auto;
  height: auto;
}


.filterDropdown {
  // This maps to the dropdown button. If the asset is changes, thus this must as well
  transform-origin: 26px 26px;
  transition: transform 300ms var(--animStyle);
}

.expandedIcon .filterDropdown {
  transform: rotate(180deg);
}

.baseBtn {
  cursor: pointer;
}

.baseBtn, .btnLike {
  appearance: none;
  text-decoration: none;
  background: none;
  border: none;
  transition: background var(--animSpeed) var(--animStyle),
              box-shadow var(--animSpeed) var(--animStyle),
              border-color var(--animSpeed) var(--animStyle),
              color var(--animStyle) var(--animSpeed);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  border-radius: var(--cardRadius);
  font-size: #{$baseUnit * 4}px;
  padding: #{$baseUnit}px #{$baseUnit * 2}px;
  color: var(--darkPrimary)
}

.baseBtn:hover {
  background: var(--cardActiveBackground);
  border-color: transparent;
  box-shadow: var(--cardActiveBoxShadow);
}

.baseBtn svg, .btnLike svg {
  $size: #{$baseUnit * 8}px;
  height: $size;
  width: $size;
  flex-shrink: 0;
}

$pendIconMarg: #{$baseUnit * 2}px;

.baseBtn.prependIcon svg, .btnLike.prependIcon svg {
  margin-right: $pendIconMarg;
}

.baseBtn.appendIcon svg, .btnLike.appendIcon svg {
  margin-left: $pendIconMarg;
}

.post-body {
  margin-bottom: #{$baseUnit * 10}px;
  max-width: #{$baseUnit * 175}px;

  img {
    margin: 0 auto;
    display: block;
    max-width: 100%;
  }

  p {
    line-height: 1.2em;
  }
}

.post-lower-area {
  max-width: #{$baseUnit * 230}px;
}

// Please use this sparingly. There's massive A11y concerns
.unlink {
  text-decoration: none;
  color: inherit;
}

pre {
  overflow: auto;
  border: var(--cardOutlineStyle);
  border-radius: 8px;
  background: white;
}

.lowercase {
  text-transform: lowercase;
}

.pointer {
  cursor: pointer;
}

.circleImg {
  flex-shrink: 0;
  flex-grow: 0;
  border-radius: 50%;
}

a {
  color: var(--darkPrimary);
}

svg.strokeicon {
  &, * {
    transition: stroke var(--animStyle) var(--animSpeed);
    stroke: var(--darkPrimary);
  }
}

svg:not(.strokeicon) {
  &, * {
    transition: fill var(--animStyle) var(--animSpeed);
    fill: var(--darkPrimary);
  }
}
